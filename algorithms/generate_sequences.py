place = []

def generate_placements_with_repetitions(array, m, prefix=None):
    global place
    prefix = prefix or []
    if m == 0:
        if prefix not in place:
            place.append(prefix.copy())
        return
    for i in array:
        prefix.append(i)
        generate_placements_with_repetitions(array, m - 1, prefix)
        prefix.pop()

def generate_permutations(array, m, prefix=None):
    global place
    prefix = prefix or []
    if m == 0:
        if prefix not in place:
            place.append(prefix.copy())
        return
    for i in array:
        if array.count(i) > prefix.count(i):
            prefix.append(i)
            generate_permutations(array, m - 1, prefix)
            prefix.pop()

def test_sorts():
    sorts = [generate_placements_with_repetitions, generate_permutations]
    names = ["generate_placements_with_repetitions", "generate_permutations"]
    tests = [[], ['a'], [4, 5, 6], ['d', 'q', 'a'], [1, 1, 1, 3, 4, 5]]
    tests_nums = {generate_placements_with_repetitions: [0, 1, 2, 3, 4], generate_permutations: [0, 1, 3, 3, 6]}
    answers = {generate_placements_with_repetitions: [[[]], [['a']], [[4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6], [6, 4], [6, 5], [6, 6]],
                                                      [['d', 'd', 'd'], ['d', 'd', 'q'], ['d', 'd', 'a'], ['d', 'q', 'd'], ['d', 'q', 'q'], ['d', 'q', 'a'], ['d', 'a', 'd'], ['d', 'a', 'q'], ['d', 'a', 'a'], ['q', 'd', 'd'],
                                                       ['q', 'd', 'q'], ['q', 'd', 'a'], ['q', 'q', 'd'], ['q', 'q', 'q'], ['q', 'q', 'a'], ['q', 'a', 'd'], ['q', 'a', 'q'], ['q', 'a', 'a'], ['a', 'd', 'd'], ['a', 'd', 'q'],
                                                       ['a', 'd', 'a'], ['a', 'q', 'd'], ['a', 'q', 'q'], ['a', 'q', 'a'], ['a', 'a', 'd'], ['a', 'a', 'q'], ['a', 'a', 'a']], 
                                                       [[1, 1, 1, 1], [1, 1, 1, 3], [1, 1, 1, 4], [1, 1, 1, 5], [1, 1, 3, 1], [1, 1, 3, 3], [1, 1, 3, 4], [1, 1, 3, 5], [1, 1, 4, 1], [1, 1, 4, 3], [1, 1, 4, 4], [1, 1, 4, 5],
                                                        [1, 1, 5, 1], [1, 1, 5, 3], [1, 1, 5, 4], [1, 1, 5, 5], [1, 3, 1, 1], [1, 3, 1, 3], [1, 3, 1, 4], [1, 3, 1, 5], [1, 3, 3, 1], [1, 3, 3, 3], [1, 3, 3, 4], [1, 3, 3, 5],
                                                        [1, 3, 4, 1], [1, 3, 4, 3], [1, 3, 4, 4], [1, 3, 4, 5], [1, 3, 5, 1], [1, 3, 5, 3], [1, 3, 5, 4], [1, 3, 5, 5], [1, 4, 1, 1], [1, 4, 1, 3], [1, 4, 1, 4], [1, 4, 1, 5],
                                                        [1, 4, 3, 1], [1, 4, 3, 3], [1, 4, 3, 4], [1, 4, 3, 5], [1, 4, 4, 1], [1, 4, 4, 3], [1, 4, 4, 4], [1, 4, 4, 5], [1, 4, 5, 1], [1, 4, 5, 3], [1, 4, 5, 4], [1, 4, 5, 5],
                                                        [1, 5, 1, 1], [1, 5, 1, 3], [1, 5, 1, 4], [1, 5, 1, 5], [1, 5, 3, 1], [1, 5, 3, 3], [1, 5, 3, 4], [1, 5, 3, 5], [1, 5, 4, 1], [1, 5, 4, 3], [1, 5, 4, 4], [1, 5, 4, 5],
                                                        [1, 5, 5, 1], [1, 5, 5, 3], [1, 5, 5, 4], [1, 5, 5, 5], [3, 1, 1, 1], [3, 1, 1, 3], [3, 1, 1, 4], [3, 1, 1, 5], [3, 1, 3, 1], [3, 1, 3, 3], [3, 1, 3, 4], [3, 1, 3, 5],
                                                        [3, 1, 4, 1], [3, 1, 4, 3], [3, 1, 4, 4], [3, 1, 4, 5], [3, 1, 5, 1], [3, 1, 5, 3], [3, 1, 5, 4], [3, 1, 5, 5], [3, 3, 1, 1], [3, 3, 1, 3], [3, 3, 1, 4], [3, 3, 1, 5],
                                                        [3, 3, 3, 1], [3, 3, 3, 3], [3, 3, 3, 4], [3, 3, 3, 5], [3, 3, 4, 1], [3, 3, 4, 3], [3, 3, 4, 4], [3, 3, 4, 5], [3, 3, 5, 1], [3, 3, 5, 3], [3, 3, 5, 4], [3, 3, 5, 5],
                                                        [3, 4, 1, 1], [3, 4, 1, 3], [3, 4, 1, 4], [3, 4, 1, 5], [3, 4, 3, 1], [3, 4, 3, 3], [3, 4, 3, 4], [3, 4, 3, 5], [3, 4, 4, 1], [3, 4, 4, 3], [3, 4, 4, 4], [3, 4, 4, 5],
                                                        [3, 4, 5, 1], [3, 4, 5, 3], [3, 4, 5, 4], [3, 4, 5, 5], [3, 5, 1, 1], [3, 5, 1, 3], [3, 5, 1, 4], [3, 5, 1, 5], [3, 5, 3, 1], [3, 5, 3, 3], [3, 5, 3, 4], [3, 5, 3, 5],
                                                        [3, 5, 4, 1], [3, 5, 4, 3], [3, 5, 4, 4], [3, 5, 4, 5], [3, 5, 5, 1], [3, 5, 5, 3], [3, 5, 5, 4], [3, 5, 5, 5], [4, 1, 1, 1], [4, 1, 1, 3], [4, 1, 1, 4], [4, 1, 1, 5],
                                                        [4, 1, 3, 1], [4, 1, 3, 3], [4, 1, 3, 4], [4, 1, 3, 5], [4, 1, 4, 1], [4, 1, 4, 3], [4, 1, 4, 4], [4, 1, 4, 5], [4, 1, 5, 1], [4, 1, 5, 3], [4, 1, 5, 4], [4, 1, 5, 5],
                                                        [4, 3, 1, 1], [4, 3, 1, 3], [4, 3, 1, 4], [4, 3, 1, 5], [4, 3, 3, 1], [4, 3, 3, 3], [4, 3, 3, 4], [4, 3, 3, 5], [4, 3, 4, 1], [4, 3, 4, 3], [4, 3, 4, 4], [4, 3, 4, 5],
                                                        [4, 3, 5, 1], [4, 3, 5, 3], [4, 3, 5, 4], [4, 3, 5, 5], [4, 4, 1, 1], [4, 4, 1, 3], [4, 4, 1, 4], [4, 4, 1, 5], [4, 4, 3, 1], [4, 4, 3, 3], [4, 4, 3, 4], [4, 4, 3, 5],
                                                        [4, 4, 4, 1], [4, 4, 4, 3], [4, 4, 4, 4], [4, 4, 4, 5], [4, 4, 5, 1], [4, 4, 5, 3], [4, 4, 5, 4], [4, 4, 5, 5], [4, 5, 1, 1], [4, 5, 1, 3], [4, 5, 1, 4], [4, 5, 1, 5],
                                                        [4, 5, 3, 1], [4, 5, 3, 3], [4, 5, 3, 4], [4, 5, 3, 5], [4, 5, 4, 1], [4, 5, 4, 3], [4, 5, 4, 4], [4, 5, 4, 5], [4, 5, 5, 1], [4, 5, 5, 3], [4, 5, 5, 4], [4, 5, 5, 5],
                                                        [5, 1, 1, 1], [5, 1, 1, 3], [5, 1, 1, 4], [5, 1, 1, 5], [5, 1, 3, 1], [5, 1, 3, 3], [5, 1, 3, 4], [5, 1, 3, 5], [5, 1, 4, 1], [5, 1, 4, 3], [5, 1, 4, 4], [5, 1, 4, 5],
                                                        [5, 1, 5, 1], [5, 1, 5, 3], [5, 1, 5, 4], [5, 1, 5, 5], [5, 3, 1, 1], [5, 3, 1, 3], [5, 3, 1, 4], [5, 3, 1, 5], [5, 3, 3, 1], [5, 3, 3, 3], [5, 3, 3, 4], [5, 3, 3, 5],
                                                        [5, 3, 4, 1], [5, 3, 4, 3], [5, 3, 4, 4], [5, 3, 4, 5], [5, 3, 5, 1], [5, 3, 5, 3], [5, 3, 5, 4], [5, 3, 5, 5], [5, 4, 1, 1], [5, 4, 1, 3], [5, 4, 1, 4], [5, 4, 1, 5],
                                                        [5, 4, 3, 1], [5, 4, 3, 3], [5, 4, 3, 4], [5, 4, 3, 5], [5, 4, 4, 1], [5, 4, 4, 3], [5, 4, 4, 4], [5, 4, 4, 5], [5, 4, 5, 1], [5, 4, 5, 3], [5, 4, 5, 4], [5, 4, 5, 5],
                                                        [5, 5, 1, 1], [5, 5, 1, 3], [5, 5, 1, 4], [5, 5, 1, 5], [5, 5, 3, 1], [5, 5, 3, 3], [5, 5, 3, 4], [5, 5, 3, 5], [5, 5, 4, 1], [5, 5, 4, 3], [5, 5, 4, 4], [5, 5, 4, 5],
                                                        [5, 5, 5, 1], [5, 5, 5, 3], [5, 5, 5, 4], [5, 5, 5, 5]]],
               generate_permutations: [[[]], [['a']], [[4, 5, 6], [4, 6, 5], [5, 4, 6], [5, 6, 4], [6, 4, 5], [6, 5, 4]], [['d', 'q', 'a'], ['d', 'a', 'q'], ['q', 'd', 'a'], ['q', 'a', 'd'], ['a', 'd', 'q'], ['a', 'q', 'd']],
                                       [[1, 1, 1, 3, 4, 5], [1, 1, 1, 3, 5, 4], [1, 1, 1, 4, 3, 5], [1, 1, 1, 4, 5, 3], [1, 1, 1, 5, 3, 4], [1, 1, 1, 5, 4, 3], [1, 1, 3, 1, 4, 5], [1, 1, 3, 1, 5, 4], [1, 1, 3, 4, 1, 5], [1, 1, 3, 4, 5, 1],
                                        [1, 1, 3, 5, 1, 4], [1, 1, 3, 5, 4, 1], [1, 1, 4, 1, 3, 5], [1, 1, 4, 1, 5, 3], [1, 1, 4, 3, 1, 5], [1, 1, 4, 3, 5, 1], [1, 1, 4, 5, 1, 3], [1, 1, 4, 5, 3, 1], [1, 1, 5, 1, 3, 4], [1, 1, 5, 1, 4, 3],
                                        [1, 1, 5, 3, 1, 4], [1, 1, 5, 3, 4, 1], [1, 1, 5, 4, 1, 3], [1, 1, 5, 4, 3, 1], [1, 3, 1, 1, 4, 5], [1, 3, 1, 1, 5, 4], [1, 3, 1, 4, 1, 5], [1, 3, 1, 4, 5, 1], [1, 3, 1, 5, 1, 4], [1, 3, 1, 5, 4, 1],
                                        [1, 3, 4, 1, 1, 5], [1, 3, 4, 1, 5, 1], [1, 3, 4, 5, 1, 1], [1, 3, 5, 1, 1, 4], [1, 3, 5, 1, 4, 1], [1, 3, 5, 4, 1, 1], [1, 4, 1, 1, 3, 5], [1, 4, 1, 1, 5, 3], [1, 4, 1, 3, 1, 5], [1, 4, 1, 3, 5, 1],
                                        [1, 4, 1, 5, 1, 3], [1, 4, 1, 5, 3, 1], [1, 4, 3, 1, 1, 5], [1, 4, 3, 1, 5, 1], [1, 4, 3, 5, 1, 1], [1, 4, 5, 1, 1, 3], [1, 4, 5, 1, 3, 1], [1, 4, 5, 3, 1, 1], [1, 5, 1, 1, 3, 4], [1, 5, 1, 1, 4, 3],
                                        [1, 5, 1, 3, 1, 4], [1, 5, 1, 3, 4, 1], [1, 5, 1, 4, 1, 3], [1, 5, 1, 4, 3, 1], [1, 5, 3, 1, 1, 4], [1, 5, 3, 1, 4, 1], [1, 5, 3, 4, 1, 1], [1, 5, 4, 1, 1, 3], [1, 5, 4, 1, 3, 1], [1, 5, 4, 3, 1, 1],
                                        [3, 1, 1, 1, 4, 5], [3, 1, 1, 1, 5, 4], [3, 1, 1, 4, 1, 5], [3, 1, 1, 4, 5, 1], [3, 1, 1, 5, 1, 4], [3, 1, 1, 5, 4, 1], [3, 1, 4, 1, 1, 5], [3, 1, 4, 1, 5, 1], [3, 1, 4, 5, 1, 1], [3, 1, 5, 1, 1, 4],
                                        [3, 1, 5, 1, 4, 1], [3, 1, 5, 4, 1, 1], [3, 4, 1, 1, 1, 5], [3, 4, 1, 1, 5, 1], [3, 4, 1, 5, 1, 1], [3, 4, 5, 1, 1, 1], [3, 5, 1, 1, 1, 4], [3, 5, 1, 1, 4, 1], [3, 5, 1, 4, 1, 1], [3, 5, 4, 1, 1, 1],
                                        [4, 1, 1, 1, 3, 5], [4, 1, 1, 1, 5, 3], [4, 1, 1, 3, 1, 5], [4, 1, 1, 3, 5, 1], [4, 1, 1, 5, 1, 3], [4, 1, 1, 5, 3, 1], [4, 1, 3, 1, 1, 5], [4, 1, 3, 1, 5, 1], [4, 1, 3, 5, 1, 1], [4, 1, 5, 1, 1, 3],
                                        [4, 1, 5, 1, 3, 1], [4, 1, 5, 3, 1, 1], [4, 3, 1, 1, 1, 5], [4, 3, 1, 1, 5, 1], [4, 3, 1, 5, 1, 1], [4, 3, 5, 1, 1, 1], [4, 5, 1, 1, 1, 3], [4, 5, 1, 1, 3, 1], [4, 5, 1, 3, 1, 1], [4, 5, 3, 1, 1, 1],
                                        [5, 1, 1, 1, 3, 4], [5, 1, 1, 1, 4, 3], [5, 1, 1, 3, 1, 4], [5, 1, 1, 3, 4, 1], [5, 1, 1, 4, 1, 3], [5, 1, 1, 4, 3, 1], [5, 1, 3, 1, 1, 4], [5, 1, 3, 1, 4, 1], [5, 1, 3, 4, 1, 1], [5, 1, 4, 1, 1, 3],
                                        [5, 1, 4, 1, 3, 1], [5, 1, 4, 3, 1, 1], [5, 3, 1, 1, 1, 4], [5, 3, 1, 1, 4, 1], [5, 3, 1, 4, 1, 1], [5, 3, 4, 1, 1, 1], [5, 4, 1, 1, 1, 3], [5, 4, 1, 1, 3, 1], [5, 4, 1, 3, 1, 1], [5, 4, 3, 1, 1, 1]]]}
    for function in sorts:
        print("Tests for function", names[sorts.index(function)])
        for j in range(5):
            function(tests[j], tests_nums[function][j])
            print(f"Test #{j + 1}. ", end='')
            if place == answers[function][j]:
                print('Success')
            else:
                print('Failure')
            print()
            place.clear()

test_sorts()